from aiogram import Router, F
from aiogram.types import Message, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from database.models import register_user, save_email_to_user
registration_router = Router()

class EmailForm(StatesGroup):
    waiting_for_email = State()

@registration_router.message(F.text.lower() == "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
async def register_handler(message: Message, state: FSMContext):
    register_user(message.from_user.id, message.from_user.full_name)
    await message.answer("üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à e-mail –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:")
    await state.set_state(EmailForm.waiting_for_email)
@registration_router.message(EmailForm.waiting_for_email)
async def save_email(message: Message, state: FSMContext):
    email = message.text
    save_email_to_user(message.from_user.id, email)
    markup = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton( text="–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º üõçÔ∏è", web_app=WebAppInfo(url="https://lambent-tartufo-95748f.netlify.app/"))]],resize_keyboard=True)
    await message.answer("üì© –°–ø–∞—Å–∏–±–æ! –í–∞—à e-mail —Å–æ—Ö—Ä–∞–Ω—ë–Ω.\n–ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º üëá", reply_markup=markup)
    await state.clear()
@registration_router.message(F.text.lower() == "–Ω–µ—Ç, —Å–ø–∞—Å–∏–±–æ, –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º")
async def skip_registration(message: Message):
    markup = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º üõçÔ∏è",web_app=WebAppInfo(url="https://lambent-tartufo-95748f.netlify.app/"))]],resize_keyboard=True)
    await message.answer("–ë–µ–∑ –ø—Ä–æ–±–ª–µ–º üòä –í–æ—Ç –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ üëá", reply_markup=markup)
